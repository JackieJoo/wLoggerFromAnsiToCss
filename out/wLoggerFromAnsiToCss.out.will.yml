format: outwillfile-2.0
root:
  - wLoggerFromAnsiToCss.out
consistency:
  wLoggerFromAnsiToCss.out.will.yml: &ref_0
    hash: 0196b32a2df435e3920174844305bdc7
    size: 13213
  ../.ex.will.yml: &ref_1
    hash: 62e644b2f1670de8c3eee656813b2d66
    size: 999
  ../.im.will.yml: &ref_2
    hash: 844ab52058e80d039128df770afd6bfa
    size: 1692
module:
  wLoggerFromAnsiToCss.out:
    about:
      name: wLoggerFromAnsiToCss
      org: noorg
      description: >-
        Class to transform ANSI-styled input into CSS-styled output supported by
        the browser's console.
      enabled: 1
      version: 0.4.75
      interpreters:
        - nodejs >= 8.0.0
        - chrome >= 60.0.0
        - firefox >= 60.0.0
      keywords:
        - wTools
    path:
      module.willfiles:
        criterion:
          predefined: 1
        path: wLoggerFromAnsiToCss.out.will.yml
      module.common:
        criterion:
          predefined: 1
        path: wLoggerFromAnsiToCss.out
      module.original.willfiles:
        criterion:
          predefined: 1
        path:
          - ../.ex.will.yml
          - ../.im.will.yml
      module.peer.willfiles:
        criterion:
          predefined: 1
        path:
          - ../.ex.will.yml
          - ../.im.will.yml
      module.peer.in:
        criterion:
          predefined: 1
        path: ..
      download:
        criterion:
          predefined: 1
      repository:
        path: 'git+https:///github.com/Wandalen/wLoggerFromAnsiToCss.git'
      origins:
        path:
          - 'git+https:///github.com/Wandalen/wLoggerFromAnsiToCss.git'
          - 'npm:///wloggerfromansitocss'
      bugs:
        path: 'https:///github.com/Wandalen/wLoggerFromAnsiToCss/issues'
      in:
        path: .
      temp:
        path: .
      out:
        path: .
      out.debug:
        criterion:
          debug: 1
        path: debug
      out.release:
        criterion:
          debug: 0
        path: release
      proto:
        path: ../proto
      export:
        path: '{path::proto}/**'
      exported.dir.proto.export:
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        path: ../proto
      exported.files.proto.export:
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        path:
          - ../proto
          - ../proto/dwtools
          - ../proto/dwtools/Tools.s
          - ../proto/dwtools/abase
          - ../proto/dwtools/abase/printer
          - ../proto/dwtools/abase/printer/top
          - ../proto/dwtools/abase/printer/top/FromAnsiToCss.s
          - ../proto/dwtools/abase/printer.test
          - ../proto/dwtools/abase/printer.test/FromAnsiToCss.test.s
          - ../proto/dwtools/amid
          - ../proto/dwtools/atop
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
          prefixPath: ''
        dst:
          prefixPath: ''
        mandatory: 1
        criterion:
          debug: 0
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
          prefixPath: ''
        dst:
          prefixPath: ''
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      exported.proto.export:
        src:
          filePath:
            '**': ''
          prefixPath: ../proto
        mandatory: 1
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
      exported.files.proto.export:
        src:
          filePath:
            'path::exported.files.proto.export': ''
          basePath: .
          prefixPath: 'path::exported.dir.proto.export'
          recursive: 0
        recursive: 0
        mandatory: 1
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
    step:
      export.proto:
        opts:
          export: 'path::export'
          tar: 0
        criterion:
          debug: 1
          proto: 1
        inherit:
          - module.export
      clean.out.:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 0
        inherit:
          - files.delete
      clean.out.debug:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 1
        inherit:
          - files.delete
      reflect.proto.:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.debug:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
          verbosity: null
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules.:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.submodules.raw:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules:
        opts:
          reflector: 'reflector::reflect.submodules*'
        criterion:
          debug: 1
        inherit:
          - files.reflect
      exported.proto.export:
        opts:
          reflector: 'reflector::exported.proto.export*'
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        inherit:
          - files.reflect
      exported.files.proto.export:
        opts:
          reflector: 'reflector::exported.files.proto.export*'
        criterion:
          generated: 1
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        inherit:
          - files.reflect
    build:
      proto.export:
        steps:
          - 'build::debug.raw'
          - 'step::export.proto'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
      debug.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          default: 1
          debug: 1
          raw: 1
      debug.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
      release.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
      release.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
    exported:
      proto.export:
        version: 0.4.75
        recursive: 0
        withIntegrated: 2
        tar: 0
        exportedReflector: 'reflector::exported.proto.export'
        exportedFilesReflector: 'reflector::exported.files.proto.export'
        exportedDirPath: 'path::exported.dir.proto.export'
        exportedFilesPath: 'path::exported.files.proto.export'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
    consistency:
      wLoggerFromAnsiToCss.out.will.yml: *ref_0
      ../.ex.will.yml: *ref_1
      ../.im.will.yml: *ref_2
  ../:
    about:
      name: wLoggerFromAnsiToCss
      org: noorg
      description: >-
        Class to transform ANSI-styled input into CSS-styled output supported by
        the browser's console.
      enabled: 1
      version: 0.4.75
      interpreters:
        - nodejs >= 8.0.0
        - chrome >= 60.0.0
        - firefox >= 60.0.0
      keywords:
        - wTools
    path:
      module.willfiles:
        criterion:
          predefined: 1
        path:
          - .ex.will.yml
          - .im.will.yml
      module.original.willfiles:
        criterion:
          predefined: 1
        path:
          - .ex.will.yml
          - .im.will.yml
      module.peer.willfiles:
        criterion:
          predefined: 1
        path: out/wLoggerFromAnsiToCss.out.will.yml
      module.peer.in:
        criterion:
          predefined: 1
        path: out
      module.common:
        criterion:
          predefined: 1
        path: ./
      download:
        criterion:
          predefined: 1
      repository:
        path: 'git+https:///github.com/Wandalen/wLoggerFromAnsiToCss.git'
      origins:
        path:
          - 'git+https:///github.com/Wandalen/wLoggerFromAnsiToCss.git'
          - 'npm:///wloggerfromansitocss'
      bugs:
        path: 'https:///github.com/Wandalen/wLoggerFromAnsiToCss/issues'
      in:
        path: .
      temp:
        path: out
      out:
        path: out
      out.debug:
        criterion:
          debug: 1
        path: out/debug
      out.release:
        criterion:
          debug: 0
        path: out/release
      proto:
        path: proto
      export:
        path: '{path::proto}/**'
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 0
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
        mandatory: 1
        criterion:
          debug: 1
        inherit:
          - predefined.*
    step:
      export.proto:
        opts:
          export: 'path::export'
          tar: 0
        criterion:
          debug: 1
          proto: 1
        inherit:
          - module.export
      clean.out.:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 0
        inherit:
          - files.delete
      clean.out.debug:
        opts:
          filePath: 'path::out.debug'
        criterion:
          debug: 1
        inherit:
          - files.delete
      reflect.proto.:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.debug:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.proto.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        opts:
          reflector: 'reflector::reflect.proto.*=1'
          verbosity: null
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules.:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 0
        inherit:
          - files.reflect
      reflect.submodules.raw:
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        criterion:
          debug: 1
          raw: 1
        inherit:
          - files.reflect
      reflect.submodules:
        opts:
          reflector: 'reflector::reflect.submodules*'
        criterion:
          debug: 1
        inherit:
          - files.reflect
    build:
      proto.export:
        steps:
          - 'build::debug.raw'
          - 'step::export.proto'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
      debug.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          default: 1
          debug: 1
          raw: 1
      debug.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 1
          raw: 0
      release.raw:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 1
      release.compiled:
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
        criterion:
          debug: 0
          raw: 0
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
    consistency:
      ../.ex.will.yml:
        hash: 62e644b2f1670de8c3eee656813b2d66
        size: 999
      ../.im.will.yml:
        hash: 844ab52058e80d039128df770afd6bfa
        size: 1692
      wLoggerFromAnsiToCss.out.will.yml:
        hash: 0196b32a2df435e3920174844305bdc7
        size: 13213
